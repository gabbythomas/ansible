pipeline {
  agent any
  environment {
    JENKINS_MASTER_IP     = 3.137.207.150
    AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    EC2_SECURITY_GROUP_ID = credentials('EC2_SECURITY_GROUP_ID')
    EC2_SUBNET_ID         = credentials('EC2_SUBNET_ID')
    EC2_REGION_ID         = credentials('EC2_REGION_ID')
    EC2_AMI_ID            = credentials('EC2_AMI_ID')
  }
  stages {
    stage('Generate Deployment') {
      steps {
        dir ("ec2_lifecycle") {
          withCredentials([
            usernamePassword(credentialsId: 'jenkins-login', usernameVariable: 'JENKINS_USER', passwordVariable: 'JENKINS_PASS'),
            string(credentialsId: 'jenkins-api-token', variable: 'JENKINS_API_TOKEN')
          ]) {
            ansiblePlaybook([
              playbook: 'generate-deployment-from-jenkins.yaml',
              extraVars: [JobName: 'deploy-sample-spring-maven-app', HostName: ${JENKINS_MASTER_IP}]
            ])
          }
        }
      }
    }
    stage('Provision EC2 Instance(s)') {
      steps {
        dir ("ec2_lifecycle") {
          ansiblePlaybook([
              playbook: 'ec2_provision.yaml'
          ])
        }
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
